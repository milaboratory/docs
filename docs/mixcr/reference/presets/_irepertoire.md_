### iRepertoire

iRepertoire has multiple different primer systems that vary by the regions targeted, the desired read length, and the species.

Repertoire’s RepSeq service (formerly AMP2Seq) utilizes arm-PCR technology, which uses hundreds of VDJ-specific primers in one reaction to semi-quantitatively and inclusively amplify all the expressed V(D)Js in B or T cells from a single sample.

#### Human RepSeq RNA Reagent System
==`irepertoire-human-rna-xcr-repseq-sr`==
·
==`irepertoire-human-rna-xcr-repseq-lr`==
·
[:octicons-link-16: Link](https://irepertoire.com/repseq/)
·
[:octicons-mark-github-16: Code](https://github.com/milaboratory/mixcr/blob/develop/src/main/resources/presets/protocols/irepertoire.yaml)

Short-read (SR) RNA-compatible human primers (presets that end with `sr`) cover from within Framework-3 (FR3) into the Constant Region (C). These SR primers are compatible with 100/150 paired end read (PER) sequencing. Long-read (LR) primer systems (presets that end with `ls`) cover from within FR1 and continue through to the C region. iRepertoire’s LR primers are compatible with 250 PER sequencing. Note that by default the clones are assembled by the regions not covered by the primers (`CDR3` for `sr` and `{CDR1Begin:FR4End}` for `lr`).

![](pics/irepertoire-human-rna-tcr-light.svg#only-light)
![](pics/irepertoire-human-rna-tcr-dark.svg#only-dark)
![](pics/irepertoire-human-rna-bcr-light.svg#only-light)
![](pics/irepertoire-human-rna-bcr-dark.svg#only-dark)

Example:
```shell
mixcr analyze irepertoire-human-rna-xcr-repseq-sr \
      input_R1.fastq.gz \
      input_R2.fastq.gz \
      result 
```

#### Mouse RepSeq RNA Reagent System
==`irepertoire-mouse-rna-xcr-repseq-sr`==
·
==`irepertoire-mouse-rna-xcr-repseq-lr`==
·
[:octicons-link-16: Link](https://irepertoire.com/repseq/)
·
[:octicons-mark-github-16: Code](https://github.com/milaboratory/mixcr/blob/develop/src/main/resources/presets/protocols/irepertoire.yaml)

Short-read (SR) RNA-compatible human primers (presets that end with `sr`) cover from within Framework-3 (FR3) into the Constant Region (C). These SR primers are compatible with 100/150 paired end read (PER) sequencing. Long-read (LR) primer systems (presets that end with `ls`) cover from within FR2 and continue through to the C region. iRepertoire’s LR primers are compatible with 250 PER sequencing. Note that by default the clones are assembled by the regions not covered by the primers (`CDR3` for `sr` and `{CDR2Begin:FR4End}` for `lr`).

![](pics/irepertoire-mouse-rna-tcr-light.svg#only-light)
![](pics/irepertoire-mouse-rna-tcr-dark.svg#only-dark)
![](pics/irepertoire-mouse-rna-bcr-light.svg#only-light)
![](pics/irepertoire-mouse-rna-bcr-dark.svg#only-dark)


Example:
```shell
mixcr analyze irepertoire-mouse-rna-xcr-repseq-lr \
      input_R1.fastq.gz \
      input_R2.fastq.gz \
      result 
```


#### RepSeq+ Reagent System for Human and Mouse

==`irepertoire-human-rna-xcr-repseq-lr`==
·
==`irepertoire-mouse-rna-xcr-repseq-lr`==
·
[:octicons-link-16: Link](https://irepertoire.com/repseq-2/)
·
[:octicons-mark-github-16: Code](https://github.com/milaboratory/mixcr/blob/develop/src/main/resources/presets/protocols/irepertoire.yaml)

iRepertoire’s RepSeq+ service utilizes dam-PCR technology, which allows for any combination of TCR and BCR chains (TCR-alpha, TCR-beta, TCR-delta, TCR-gamma, BCR-IgHeavy, and BCR-kappa/lambda) to be amplified within a single reaction. The RepSeq+ service is available for human (BCR and TCR) and mouse (TCR only).

![](pics/irepertoire-repseq-plus-light.svg#only-light)
![](pics/irepertoire-repseq-plus-dark.svg#only-dark)

Example:
```shell
mixcr analyze irepertoire-mouse-rna-xcr-repseq-lr \
      input_R1.fastq.gz \
      input_R2.fastq.gz \
      result 
```

#### RepSeq+ Human Reagent System with UMIs
==`irepertoire-human-rna-xcr-repseq-plus-umi-pe`==
·
==`irepertoire-human-rna-xcr-repseq-plus-umi-se`==
·
[:octicons-link-16: Link](https://irepertoire.com/repseq-2/)
·
[:octicons-mark-github-16: Code](https://github.com/milaboratory/mixcr/blob/develop/src/main/resources/presets/protocols/irepertoire.yaml)

iRepertoire's RepSeq+ service integrates dam-PCR technology. This allows for the amplification of any combination of TCR and BCR chains (including TCR-alpha, TCR-beta, TCR-delta, TCR-gamma, BCR-IgHeavy, and BCR-kappa/lambda) within a single reaction, complemented by UMI-based error correction. For IGH the kit allows identification of the following isotypes: IGHM, IGHD, IGHA, IGHE, IGHG1-2, IGHG3-4.

The recommended protocol outlines two sequencing strategies:

Paired End sequencing, which spans all regions from CDR1 to FR4.

![](pics/irepertoire-human-rna-xcr-repseq-plus-umi-pe-light.svg#only-light)
![](pics/irepertoire-human-rna-xcr-repseq-plus-umi-pe-dark.svg#only-dark)

Single End sequencing, covering the CDR2 to FR4 regions.

![](pics/irepertoire-human-rna-xcr-repseq-plus-umi-se-light.svg#only-light)
![](pics/irepertoire-human-rna-xcr-repseq-plus-umi-se-dark.svg#only-dark)

!!! note "TRG Coverage"
	For Single End sequencing, the TRG clones might only encompass the CDR3 and FR4 regions due to the extended length of the V-region. It may be beneficial to include the `--assemble-clonotypes-by CDR3` for this chain analysis.

Example:
```shell
mixcr analyze irepertoire-human-rna-xcr-repseq-plus-umi-pe \
    input_R1.fastq.gz \
    input_R2.fastq.gz \
    result
```

Original raw RepSeq+ sequences contain sample barcodes. If your data is non-demultiplexed and you want to use the barcode information to split the samples you can do so using the command bellow:

```shell
mixcr analyze irepertoire-human-rna-xcr-repseq-plus-umi-pe \
	--tag-pattern "^(UMI:N{10})(SMPL:N{8})(R1:*)\^N{3}(R2:*)" \
	--sample-table sample_table.tsv \
    input_R1.fastq.gz \
    input_R2.fastq.gz \
    result

For single end sequencing: "^(UMI:N{10})(SMPL:N{8})(R1:*)".
```
Where the sample_table.tsv looks like the example bellow:

| Sample  | TagPattern | SMPL     |
|---------|------------|----------|
| Sample1 |            | CAGCCCTA |
| Sample2 |            | GGCAATGT |
| ...     |            | ...      |


#### Human gDNA based RepSeq Reagent System

==`irepertoire-human-dna-xcr-repseq-sr`==
·
==`irepertoire-human-dna-xcr-repseq-lr`==
·
[:octicons-link-16: Link](https://irepertoire.com/repseq-2/)
·
[:octicons-mark-github-16: Code](https://github.com/milaboratory/mixcr/blob/develop/src/main/resources/presets/protocols/irepertoire.yaml)

SR gDNA compatible primers (SR-VJ) cover from within FR3 to the end of the J-gene. These have been LR gDNA compatible primers cover from within FR1 to the end of the J-gene. LR versions are available for both human TCR beta and human IgH. These can be sequenced as single end read on 300-cycle kits or for full amplicon coverage as 250 PER sequencing.
By default the clones are assembled by `{CDR1Begin:CDR3End}`, if the library has been sequenced as single end read one can assemble clones by `CDR3` by adding `--assemble-clonotypes-by CDR3`.

![](pics/irepertoire-human-dna-trb-light.svg#only-light)
![](pics/irepertoire-human-dna-trb-dark.svg#only-dark)
![](pics/irepertoire-human-dna-igh-light.svg#only-light)
![](pics/irepertoire-human-dna-igh-dark.svg#only-dark)

Example:
```shell
mixcr analyze irepertoire-human-dna-xcr-repseq-sr \
      input_R1.fastq.gz \
      input_R2.fastq.gz \
      result 
```

#### RepSeq+ Mouse Reagent System with UMIs
==`irepertoire-mouse-rna-xcr-repseq-plus-umi-pe`==
·
[:octicons-link-16: Link](https://irepertoire.com/repseq-2/)
·
[:octicons-mark-github-16: Code](https://github.com/milaboratory/mixcr/blob/develop/src/main/resources/presets/protocols/irepertoire.yaml)

iRepertoire's RepSeq+ service integrates dam-PCR technology. This allows for the amplification of any combination of TCR and BCR chains (including TCR-alpha, TCR-beta, TCR-delta, TCR-gamma, BCR-IgHeavy, and BCR-kappa/lambda) within a single reaction, complemented by UMI-based error correction. For IGH the kit allows identification of the following isotypes: IGHM, IGHD, IGHA, IGHE, IGHG1, IGHG2, IGHG3. The sequences should cover all regions from CDR2 to FR4.


![](pics/irepertoire-mouse-rna-xcr-repseq-plus-umi-pe-light.svg#only-light)
![](pics/irepertoire-mouse-rna-xcr-repseq-plus-umi-pe-dark.svg#only-dark)


Example:
```shell
mixcr analyze irepertoire-mouse-rna-xcr-repseq-plus-umi-pe \
    input_R1.fastq.gz \
    input_R2.fastq.gz \
    result
```

Original raw RepSeq+ sequences contain sample barcodes. If your data is non-demultiplexed and you want to use the barcode information to split the samples you can do so using the command bellow:

```shell
mixcr analyze irepertoire-mouse-rna-xcr-repseq-plus-umi-pe \
	--tag-pattern "^(UMI:N{10})(SMPL:N{8})(R1:*)\^N{3}(R2:*)" \
	--sample-table sample_table.tsv \
    input_R1.fastq.gz \
    input_R2.fastq.gz \
    result

```

Where the sample_table.tsv looks like the example bellow:

| Sample  | TagPattern | SMPL     |
|---------|------------|----------|
| Sample1 |            | CAGCCCTA |
| Sample2 |            | GGCAATGT |
| ...     |            | ...      |

